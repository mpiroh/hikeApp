package gui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.text.Document;
import komponenty.ScrollPaneSSCCE;
import org.jdesktop.swingx.JXTable;
import sk.ics.upjs.hikeapp.TuraDaO;
import sk.ics.upjs.hikeapp.TuraDaOFactory;

public class TuraForm extends javax.swing.JFrame {

    private TuraDaO tury;

    public TuraForm() {
        initComponents();
    }

    public TuraForm(long idT) {
        initComponents();
        idT = 1;
        tury = TuraDaOFactory.INSTANCE.getTuraDaO();
        this.setTitle(tury.dajNazovTury(idT));
        this.setLayout(new GridBagLayout());

        BufferedImage logInObrazok1 = null;

        try {
            logInObrazok1 = ImageIO.read(new File("C:\\logo\\mm.png"));

        } catch (IOException ex) {
            System.err.println("Neni obrazok!");
        }
        Image scaledObrazok1 = logInObrazok1.getScaledInstance(550,
                240, Image.SCALE_SMOOTH);

        fotkaLabel.setIcon(new ImageIcon(scaledObrazok1));
        List<ImageIcon> zoznam = this.spracujFotky(tury.dajFotky(idT));
        //
        GridBagConstraints gbc = new GridBagConstraints();
        ScrollPaneSSCCE s = new ScrollPaneSSCCE((ArrayList<ImageIcon>) zoznam);

        // Fotky
        gbc.gridwidth = 1;
        gbc.gridx = 0;
        gbc.gridy = 2;
        this.add(s, gbc);

        // Popis
        gbc.gridy++;
        JTextArea popis = new JTextArea(tury.dajPopis(idT));
        popis.setFont(new Font("Serif", Font.BOLD, 12));
        popis.setEditable(false);
        this.add(popis, gbc);

        // Detail tury
        gbc.gridy++;
        JTextArea detail = new JTextArea("wefwefeffhvfjksehvfb \n"
                + "ejfhvbjehfbvjhfb\n"
                + "ewjvfbjjhvbjshvbjk\n"
                + "ewvgweveeeeeeeeeeeeeeeeeeeeee\n"
                + "eeeeee");
        this.add(detail, gbc);
    }

    public List<ImageIcon> spracujFotky(List<Image> zoznamFotiek) {
        List<ImageIcon> upraveneFotky = new ArrayList<ImageIcon>();
        for (Image img : zoznamFotiek) {
            img = img.getScaledInstance(150, 100, Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(img);
            upraveneFotky.add(icon);
        }
        return upraveneFotky;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fotkaLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fotkaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(fotkaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 89, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TuraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TuraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TuraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TuraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TuraForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fotkaLabel;
    // End of variables declaration//GEN-END:variables
}
